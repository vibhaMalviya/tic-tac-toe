{"version":3,"sources":["utils/CalculateWinner.js","components/Square/Square.js","components/Board/Board.js","components/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","className","onClick","clickHandler","value","Board","useState","Array","fill","setSquare","isXNext","setNext","map","square","index","squares1","slice","onSquareClick","Game","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAqBeA,MArBf,SAAyBC,GAYxB,IAXA,IAAMC,EAAQ,CACb,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGEC,EAAE,EAAGA,EAAED,EAAME,OAAQD,IAAK,CAAC,IAAD,cACjBD,EAAMC,GADW,GAC1BE,EAD0B,KACxBC,EADwB,KACtBC,EADsB,KAEjC,GAAGN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGjB,MAAO,I,eCZOG,MAJf,SAAgBC,GACf,OAAO,wBAAQC,UAAU,SAASC,QAASF,EAAMG,aAA1C,SAAyDH,EAAMI,S,MCiCxDC,MA/Bf,WAAkB,IAAD,EACaC,mBAASC,MAAM,GAAGC,KAAK,OADpC,mBACThB,EADS,KACAiB,EADA,OAEWH,oBAAS,GAFpB,mBAETI,EAFS,KAEAC,EAFA,KAkBhB,OAAO,gCACL,aAAepB,EAAgBC,GAChC,qBAAKS,UAAU,QAAf,SACET,EAAQoB,KAAI,SAACC,EAAQC,GACrB,OAAO,cAAC,EAAD,CACQV,MAAOS,EACPV,aAAc,kBArBV,SAACT,GACtB,IAAGH,EAAgBC,KAAYA,EAAQE,GAAvC,CAGA,IAAMqB,EAAWvB,EAAQwB,QACzBD,EAASrB,GAAKgB,EAAU,IAAM,IAC9BD,EAAUM,GACVJ,GAASD,IAc4BO,CAAcH,KAF7BA,QAKtB,wBAAQZ,QAdU,WAClBO,EAAUF,MAAM,GAAGC,KAAK,OACxBG,GAAQ,IAYR,8B,MCvBaO,MANf,WACC,OAAO,qBAAKjB,UAAU,OAAf,SACN,cAAC,EAAD,OCKakB,MAPf,WACE,OAAO,qCACL,kDACA,cAAC,EAAD,QCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3eaad482.chunk.js","sourcesContent":["function calculateWinner(squares) {\n\tconst lines = [\n\t\t[0,1,2],\n\t\t[3,4,5],\n\t\t[6,7,8],\n\t\t[0,3,6],\n\t\t[1,4,7],\n\t\t[2,5,8],\n\t\t[0,4,8],\n\t\t[2,4,6]\n\t];\n\t\n\tfor(let i=0; i<lines.length; i++) {\n\t\tconst [a,b,c] = lines[i];\n\t\tif(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn '';\n}\n\nexport default calculateWinner;\n","import \"./Square.css\"\n\nfunction Square(props) {\n\treturn <button className=\"square\" onClick={props.clickHandler}>{props.value}</button>\n}\n\nexport default Square;\n","import React, { useState } from 'react';\nimport calculateWinner from '../../utils/CalculateWinner';\nimport Square from \"../Square/Square\";\nimport \"./Board.css\";\n\nfunction Board() {\n\tconst [squares, setSquare] = useState(Array(9).fill(null));\n\tconst [isXNext, setNext] = useState(true);\n\tconst onSquareClick = (i) => {\n\t\tif(calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tconst squares1 = squares.slice();\n\t\tsquares1[i] = isXNext ? 'X' : '0';\n\t\tsetSquare(squares1);\n\t\tsetNext(!isXNext);\n\t};\n\t\n\tconst resetBoard = () => {\n\t\tsetSquare(Array(9).fill(null));\n\t\tsetNext(true);\n\t};\n\t\n\treturn <div>\n\t\t{'Winner is ' + calculateWinner(squares)}\n\t\t<div className=\"board\">\n\t\t\t{squares.map((square, index) => {\n\t\t\t\treturn <Square key={index}\n\t\t\t\t               value={square}\n\t\t\t\t               clickHandler={() => onSquareClick(index)}/>\n\t\t\t})}\n\t\t</div>\n\t\t<button onClick={resetBoard}>Restart Game</button>\n\t</div>\n}\n\nexport default Board;\n","import Board from \"../Board/Board\";\nimport \"./Game.css\";\n\nfunction Game() {\n\treturn <div className=\"game\">\n\t\t<Board/>\n\t</div>;\n}\n\nexport default Game;\n","import './App.css';\nimport Game from './components/Game/Game';\n\nfunction App() {\n  return <>\n    <h1>Tic Tac Toe Game</h1>\n    <Game/>\n  </>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}