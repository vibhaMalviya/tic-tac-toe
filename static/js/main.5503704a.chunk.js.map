{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","utils/CalculateWinner.js","components/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","highlightClass","highlight","className","onClick","clickHandler","value","Board","squares","onSquareClick","line","a","b","c","map","square","index","calculateWinner","lines","i","length","winner","Game","useState","Array","fill","history","setHistory","isXNext","setNext","step","setStep","slice","current","stepClickHandler","App","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAOeA,MALf,SAAgBC,GACf,IAAMC,EAAiBD,EAAME,UAAY,YAAc,GACvD,OAAO,wBAAQC,UAAS,iBAAYF,GAAkBG,QAASJ,EAAMK,aAA9D,SAA6EL,EAAMM,S,MCW5EC,MAZf,YAAiD,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,cAAeC,EAAO,EAAPA,KAAO,cAC/BA,EAD+B,GACxCC,EADwC,KACtCC,EADsC,KACpCC,EADoC,KAE/C,OAAO,qBAAKV,UAAU,QAAf,SACJK,EAAQM,KAAI,SAACC,EAAQC,GACrB,OAAO,cAAC,EAAD,CACQV,MAAOS,EACPV,aAAc,kBAAMI,EAAcO,IAClCd,UAAYc,IAAUL,GAAKK,IAAUJ,GAAKI,IAAUH,GAH/CG,S,MCiBTC,MAxBf,SAAyBT,GAYxB,IAXA,IAAMU,EAAQ,CACb,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGEC,EAAE,EAAGA,EAAED,EAAME,OAAQD,IAAK,CAAC,IAAD,cACjBD,EAAMC,GADW,GAC1BR,EAD0B,KACxBC,EADwB,KACtBC,EADsB,KAEjC,GAAGL,EAAQG,IAAMH,EAAQG,KAAOH,EAAQI,IAAMJ,EAAQG,KAAOH,EAAQK,GACpE,MAAO,CACNQ,OAAQb,EAAQG,GAChBD,KAAMQ,EAAMC,IAIf,MAAO,CAAEE,OAAS,GAAIX,KAAM,KCoBdY,MAnCf,WAAiB,IAAD,EACeC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADvC,mBACRC,EADQ,KACCC,EADD,OAEYJ,oBAAS,GAFrB,mBAERK,EAFQ,KAECC,EAFD,OAGSN,mBAAS,GAHlB,mBAGRO,EAHQ,KAGFC,EAHE,OAIUd,EAAgBS,EAAQI,IAAzCT,EAJO,EAIPA,OAAQX,EAJD,EAICA,KAoBhB,OAAO,sBAAKP,UAAU,OAAf,UACN,6BAAKkB,EAAM,oBAAgBA,GAAhB,uBAA2CO,EAAU,IAAI,OACpE,cAAC,EAAD,CAAOpB,QAASkB,EAAQI,GAAOrB,cApBV,SAACU,GACtB,IAAMX,EAAUkB,EAAQM,MAAM,EAAGF,EAAO,GAClCG,EAAO,YAAOzB,EAAQsB,IACzBT,GAAUY,EAAQd,KAIrBc,EAAQd,GAAKS,EAAU,IAAM,IAC7BD,EAAW,GAAD,mBAAKnB,GAAL,CAAcyB,KACxBF,EAAQvB,EAAQY,QAChBS,GAASD,KAUoDlB,KAAMA,IACnE,6BACEgB,EAAQZ,KAAI,SAACN,EAASsB,GACtB,OAAO,6BAAe,sBAAM3B,UAAU,WAAWC,QAAS,kBAVpC,SAAC0B,GACzBC,EAAQD,GACRD,EAAQC,EAAK,IAAM,GAQ+CI,CAAiBJ,IAA3D,SAAmEA,EAAI,sBAAkBA,GAAS,kBAAxGA,YCxBLK,MARf,WACE,OAAO,sBAAKhC,UAAU,MAAf,UACL,oBAAIiC,MAAO,CAAEC,MAAO,SAApB,8BACA,uBACA,cAAC,EAAD,QCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5503704a.chunk.js","sourcesContent":["import \"./Square.css\"\n\nfunction Square(props) {\n\tconst highlightClass = props.highlight ? 'highlight' : '';\n\treturn <button className={`square ${highlightClass}`} onClick={props.clickHandler}>{props.value}</button>\n}\n\nexport default Square;\n","import Square from \"../Square/Square\";\nimport \"./Board.css\";\n\nfunction Board({ squares, onSquareClick, line}) {\n\tconst [a,b,c] = line;\n\treturn <div className=\"board\">\n\t\t\t{squares.map((square, index) => {\n\t\t\t\treturn <Square key={index}\n\t\t\t\t               value={square}\n\t\t\t\t               clickHandler={() => onSquareClick(index)}\n\t\t\t\t               highlight={(index === a || index === b || index === c)}/>\n\t\t\t})}\n\t\t</div>;\n}\n\nexport default Board;\n","function calculateWinner(squares) {\n\tconst lines = [\n\t\t[0,1,2],\n\t\t[3,4,5],\n\t\t[6,7,8],\n\t\t[0,3,6],\n\t\t[1,4,7],\n\t\t[2,5,8],\n\t\t[0,4,8],\n\t\t[2,4,6]\n\t];\n\t\n\tfor(let i=0; i<lines.length; i++) {\n\t\tconst [a,b,c] = lines[i];\n\t\tif(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn {\n\t\t\t\twinner: squares[a],\n\t\t\t\tline: lines[i]\n\t\t\t}\n\t\t}\n\t}\n\treturn { winner : '', line: [] };\n}\n\nexport default calculateWinner;\n","import React, { useState } from 'react';\n\nimport Board from \"../Board/Board\";\nimport \"./Game.css\";\nimport calculateWinner from \"../../utils/CalculateWinner\";\n\nfunction Game() {\n\tconst [history, setHistory] = useState([Array(9).fill(null)]);\n\tconst [isXNext, setNext] = useState(true);\n\tconst [step, setStep] = useState(0);\n\tconst { winner, line } = calculateWinner(history[step]);\n\t\n\tconst onSquareClick = (i) => {\n\t\tconst squares = history.slice(0, step + 1);\n\t\tconst current = [...squares[step]];\n\t\tif(winner || current[i]) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tcurrent[i] = isXNext ? 'X' : 'O';\n\t\tsetHistory([...squares, current]);\n\t\tsetStep(squares.length);\n\t\tsetNext(!isXNext);\n\t};\n\t\n\tconst stepClickHandler = (step) => {\n\t\tsetStep(step);\n\t\tsetNext(step%2 === 0);\n\t};\n\t\n\treturn <div className=\"game\">\n\t\t<h1>{winner ? `Winner is ${winner}` : `Next player: ${isXNext ? 'X':'O'}`}</h1>\n\t\t<Board squares={history[step]} onSquareClick={onSquareClick} line={line}/>\n\t\t<ul>\n\t\t\t{history.map((squares, step) => {\n\t\t\t\treturn <li key={step}><span className=\"stepLink\" onClick={() => stepClickHandler(step)}>{step ? `Go to step #${step}` : 'Restart game'}</span></li>;\n\t\t\t})}\n\t\t</ul>\n\t</div>;\n}\n\nexport default Game;\n","import './App.css';\nimport Game from './components/Game/Game';\n\nfunction App() {\n  return <div className=\"app\">\n    <h1 style={{ color: 'Brown'}}>Tic Tac Toe Game</h1>\n    <br/>\n    <Game/>\n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}