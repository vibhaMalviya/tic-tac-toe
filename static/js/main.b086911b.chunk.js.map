{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","utils/CalculateWinner.js","components/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","clickHandler","value","Board","squares","onSquareClick","map","square","index","calculateWinner","lines","i","length","a","b","c","Game","useState","Array","fill","history","setHistory","isXNext","setNext","step","setStep","slice","current","stepClickHandler","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAMeA,MAJf,SAAgBC,GACf,OAAO,wBAAQC,UAAU,SAASC,QAASF,EAAMG,aAA1C,SAAyDH,EAAMI,S,MCUxDC,MAVf,YAA2C,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,cACzB,OAAO,qBAAKN,UAAU,QAAf,SACJK,EAAQE,KAAI,SAACC,EAAQC,GACrB,OAAO,cAAC,EAAD,CACQN,MAAOK,EACPN,aAAc,kBAAMI,EAAcG,KAF7BA,S,MCeTC,MArBf,SAAyBL,GAYxB,IAXA,IAAMM,EAAQ,CACb,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGEC,EAAE,EAAGA,EAAED,EAAME,OAAQD,IAAK,CAAC,IAAD,cACjBD,EAAMC,GADW,GAC1BE,EAD0B,KACxBC,EADwB,KACtBC,EADsB,KAEjC,GAAGX,EAAQS,IAAMT,EAAQS,KAAOT,EAAQU,IAAMV,EAAQS,KAAOT,EAAQW,GACpE,OAAOX,EAAQS,GAGjB,MAAO,ICqBOG,MAjCf,WAAiB,IAAD,EACeC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADvC,mBACRC,EADQ,KACCC,EADD,OAEYJ,oBAAS,GAFrB,mBAERK,EAFQ,KAECC,EAFD,OAGSN,mBAAS,GAHlB,mBAGRO,EAHQ,KAGFC,EAHE,KAsBf,OAAO,sBAAK1B,UAAU,OAAf,UACN,6BAAK,aAAeU,EAAgBW,EAAQI,MAC5C,cAAC,EAAD,CAAOpB,QAASgB,EAAQI,GAAOnB,cAnBV,SAACM,GACtB,IAAMP,EAAUgB,EAAQM,MAAM,EAAGF,EAAO,GAClCG,EAAO,YAAOvB,EAAQoB,IACzBf,EAAgBkB,IAAYA,EAAQhB,KAGvCgB,EAAQhB,GAAKW,EAAU,IAAM,IAC7BD,EAAW,GAAD,mBAAKjB,GAAL,CAAcuB,KACxBF,EAAQrB,EAAQQ,QAChBW,GAASD,OAWT,6BACEF,EAAQd,KAAI,SAACF,EAASoB,GACtB,OAAO,6BAAI,wBAAmBxB,QAAS,kBAVjB,SAACwB,GACzBC,EAAQD,GACRD,EAAQC,EAAK,IAAM,GAQ4BI,CAAiBJ,IAAnD,SAA2DA,EAAI,sBAAkBA,GAAS,gBAA7EA,cCvBbK,MAPf,WACE,OAAO,qCACL,kDACA,cAAC,EAAD,QCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b086911b.chunk.js","sourcesContent":["import \"./Square.css\"\n\nfunction Square(props) {\n\treturn <button className=\"square\" onClick={props.clickHandler}>{props.value}</button>\n}\n\nexport default Square;\n","import Square from \"../Square/Square\";\nimport \"./Board.css\";\n\nfunction Board({ squares, onSquareClick}) {\n\treturn <div className=\"board\">\n\t\t\t{squares.map((square, index) => {\n\t\t\t\treturn <Square key={index}\n\t\t\t\t               value={square}\n\t\t\t\t               clickHandler={() => onSquareClick(index)}/>\n\t\t\t})}\n\t\t</div>;\n}\n\nexport default Board;\n","function calculateWinner(squares) {\n\tconst lines = [\n\t\t[0,1,2],\n\t\t[3,4,5],\n\t\t[6,7,8],\n\t\t[0,3,6],\n\t\t[1,4,7],\n\t\t[2,5,8],\n\t\t[0,4,8],\n\t\t[2,4,6]\n\t];\n\t\n\tfor(let i=0; i<lines.length; i++) {\n\t\tconst [a,b,c] = lines[i];\n\t\tif(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn '';\n}\n\nexport default calculateWinner;\n","import React, { useState } from 'react';\n\nimport Board from \"../Board/Board\";\nimport \"./Game.css\";\nimport calculateWinner from \"../../utils/CalculateWinner\";\n\nfunction Game() {\n\tconst [history, setHistory] = useState([Array(9).fill(null)]);\n\tconst [isXNext, setNext] = useState(true);\n\tconst [step, setStep] = useState(0);\n\t\n\tconst onSquareClick = (i) => {\n\t\tconst squares = history.slice(0, step + 1);\n\t\tconst current = [...squares[step]];\n\t\tif(calculateWinner(current) || current[i]) {\n\t\t\treturn;\n\t\t}\n\t\tcurrent[i] = isXNext ? 'X' : 'O';\n\t\tsetHistory([...squares, current]);\n\t\tsetStep(squares.length);\n\t\tsetNext(!isXNext);\n\t};\n\t\n\tconst stepClickHandler = (step) => {\n\t\tsetStep(step);\n\t\tsetNext(step%2 === 0);\n\t};\n\t\n\treturn <div className=\"game\">\n\t\t<h1>{'Winner is ' + calculateWinner(history[step])}</h1>\n\t\t<Board squares={history[step]} onSquareClick={onSquareClick}/>\n\t\t<ul>\n\t\t\t{history.map((squares, step) => {\n\t\t\t\treturn <li><button key={step} onClick={() => stepClickHandler(step)}>{step ? `Go to step #${step}` : 'Restart game'}</button></li>;\n\t\t\t})}\n\t\t</ul>\n\t</div>;\n}\n\nexport default Game;\n","import './App.css';\nimport Game from './components/Game/Game';\n\nfunction App() {\n  return <>\n    <h1>Tic Tac Toe Game</h1>\n    <Game/>\n  </>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}